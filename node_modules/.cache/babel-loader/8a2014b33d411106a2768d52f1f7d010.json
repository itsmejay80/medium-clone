{"ast":null,"code":"var _jsxFileName = \"/mnt/d/medium clone/src/components/yourStoriesList.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"./Feeds.css\";\nimport { app } from \"../firebase\";\nimport SinglePost from \"./SinglePost.jsx\";\nimport { AuthContext } from \"../Auth\";\nconst db = app.firestore();\n\nconst YourStories = () => {\n  const {\n    authuser,\n    userName,\n    userEmail\n  } = useContext(AuthContext);\n  const [posts, setPosts] = useState([]);\n  const [user, setUser] = useState(); // await setUser(userEmail)\n\n  let dataArray = [];\n  console.log(userEmail);\n  useEffect(() => {\n    let you = userEmail && db.collection('posts').where('emailId', '==', userEmail).get().then(querySnapshot => {\n      const data = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setPosts(data);\n    });\n  }, [userEmail]);\n  console.log(posts);\n\n  const getdata = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feeds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Welcome \", userName), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, posts.map(post => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SinglePost, {\n    key: post.id,\n    id: post.id,\n    title: post.title,\n    content: post.content,\n    imageUrl: post.imageUrl,\n    likesCount: post.likesCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })))));\n};\n\nexport default YourStories;","map":{"version":3,"sources":["/mnt/d/medium clone/src/components/yourStoriesList.jsx"],"names":["React","useState","useEffect","useContext","app","SinglePost","AuthContext","db","firestore","YourStories","authuser","userName","userEmail","posts","setPosts","user","setUser","dataArray","console","log","you","collection","where","get","then","querySnapshot","data","docs","map","doc","id","getdata","post","title","content","imageUrl","likesCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,EAAmCC,UAAnC,QAAqD,OAArD;AACA,OAAO,aAAP;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAGA,SAAQC,WAAR,QAA0B,SAA1B;AAEA,MAAMC,EAAE,GAAGH,GAAG,CAACI,SAAJ,EAAX;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM;AAACC,IAAAA,QAAD;AAAUC,IAAAA,QAAV;AAAmBC,IAAAA;AAAnB,MAAgCT,UAAU,CAACG,WAAD,CAAhD;AACA,QAAM,CAACO,KAAD,EAAOC,QAAP,IAAiBb,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACc,IAAD,EAAMC,OAAN,IAAef,QAAQ,EAA7B,CAHwB,CAIxB;;AACA,MAAIgB,SAAS,GAAC,EAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACAV,EAAAA,SAAS,CAAE,MAAI;AACX,QAAIkB,GAAG,GAAGR,SAAS,IAAIL,EAAE,CAACc,UAAH,CAAc,OAAd,EACtBC,KADsB,CAChB,SADgB,EACN,IADM,EACDV,SADC,EAEtBW,GAFsB,GAGtBC,IAHsB,CAGfC,aAAD,IAAiB;AACtB,YAAMC,IAAI,GAACD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAwBC,GAAD,KAAU;AAC1CC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADkC;AAE1C,WAAGD,GAAG,CAACH,IAAJ;AAFuC,OAAV,CAAvB,CAAX;AAIAZ,MAAAA,QAAQ,CAACY,IAAD,CAAR;AACD,KATsB,CAAvB;AAWH,GAZQ,EAYP,CAACd,SAAD,CAZO,CAAT;AAaAM,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;;AACA,QAAMkB,OAAO,GAAE,MAAI,CAClB,CADD;;AAGE,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAapB,QAAb,CADA,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,CAACe,GAAN,CAAUI,IAAI,iBACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEA,IAAI,CAACF,EAAtB;AAA0B,IAAA,EAAE,EAAEE,IAAI,CAACF,EAAnC;AAAuC,IAAA,KAAK,EAAEE,IAAI,CAACC,KAAnD;AAA0D,IAAA,OAAO,EAAED,IAAI,CAACE,OAAxE;AAAiF,IAAA,QAAQ,EAAEF,IAAI,CAACG,QAAhG;AAA0G,IAAA,UAAU,EAAEH,IAAI,CAACI,UAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADC,CADH,CAFF,CADF;AAaH,CArCD;;AAuCA,eAAe3B,WAAf","sourcesContent":["import React, { useState,useEffect,useContext } from \"react\";\nimport \"./Feeds.css\";\nimport { app } from \"../firebase\";\nimport SinglePost from \"./SinglePost.jsx\";\n\n\nimport {AuthContext} from \"../Auth\";\n\nconst db = app.firestore();\n\nconst YourStories = () => {\n  const {authuser,userName,userEmail} = useContext(AuthContext)\n  const [posts,setPosts]=useState([ ])\n  const [user,setUser]=useState()\n  // await setUser(userEmail)\n  let dataArray=[ ]\n  console.log(userEmail)\n  useEffect( ()=>{\n      let you = userEmail && db.collection('posts')\n      .where('emailId','==',userEmail)\n      .get()\n      .then( (querySnapshot)=>{\n        const data=querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setPosts(data) \n      }) \n    \n  },[userEmail])\n  console.log(posts)\n  const getdata =()=>{\n  } \n\n    return ( \n      <div className=\"feeds\">\n      <h3>Welcome {userName}</h3>\n        <ul>{\n           posts.map(post=>(\n          <li>\n          <SinglePost key={post.id} id={post.id} title={post.title} content={post.content} imageUrl={post.imageUrl} likesCount={post.likesCount}/>\n        </li>\n        ))          \n          }\n        </ul>\n      </div>\n     );\n}\n \nexport default YourStories;"]},"metadata":{},"sourceType":"module"}