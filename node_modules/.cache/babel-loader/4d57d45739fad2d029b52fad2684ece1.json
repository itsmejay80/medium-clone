{"ast":null,"code":"var _jsxFileName = \"/mnt/d/medium clone/src/PrivateRoute.js\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLoggedIn } from './isLoggedIn';\n\nconst PrivateRoute = ({\n  component: RouteComponent,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: routeProps => isLoggedIn() ? /*#__PURE__*/React.createElement(RouteComponent, Object.assign({}, routeProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/signIn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/mnt/d/medium clone/src/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","isLoggedIn","PrivateRoute","component","RouteComponent","rest","routeProps"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,UAAd,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAA+B,kBAA/B;AACA,SAAQC,UAAR,QAAyB,cAAzB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,cAAZ;AAA4B,KAAGC;AAA/B,CAAD,KAA0C;AAE3D,sBACI,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAEC,UAAU,IAChBL,UAAU,kBACR,oBAAC,cAAD,oBAAoBK,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADQ,gBAGR,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAYH,CAdD;;AAgBA,eAAeJ,YAAf","sourcesContent":["import React,{useContext } from 'react';\nimport { Route, Redirect} from 'react-router-dom';\nimport {isLoggedIn} from './isLoggedIn'\n\nconst PrivateRoute = ({component: RouteComponent, ...rest}) => {\n    \n    return (\n        <Route\n          {...rest}\n          render={routeProps =>\n            isLoggedIn() ? (\n              <RouteComponent {...routeProps} />\n            ) : (\n              <Redirect to={\"/signIn\"} />\n            )\n          }\n        />\n    );\n};\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}